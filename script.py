# a =[2.2, 2.2, 2.2, 2.2, 2.2, 2.2, 2.2, 2.2, 2.2, 2.2, 2.2, 2.2, 2.2, 2.2, 2.2, 2.2, 2.2, 2.2, 2.2, 2.2, 2.2, 2.2, 2.2, 2.2, 2.2,
#     2.2, 2.2, 2.2, 2.2, 2.2, 2.2, 2.2, 2.2, 2.2, 2.2, 2.2, 2.2, 2.2, 2.2, 2.2, 2.2, 2.2, 2.2, 2.2, 2.2, 2.2, 2.2, 2.2, 2.2, 2.2,
#     2.2, 2.2, 2.2, 2.2, 2.2, 2.2, 2.2, 2.2, 2.2, 2.2, 2.2, 2.2, 2.2, 2.2, 2.2, 2.2, 2.2, 2.2, 2.2, 2.2, 2.2, 2.2, 2.2, 2.2, 2.2,
#     2.2, 2.2, 2.2, 2.2, 2.2, 2.2, 2.2, 2.2, 2.2, 2.2, 2.2, 2.2, 2.2, 2.2, 2.2, 2.2, 2.2, 2.2, 2.2, 2.2, 2.2, 2.2, 2.2, 2.2, 2.2,
#     2.2, 2.2, 2.2, 2.2, 2.2, 2.2, 2.2, 2.2, 2.2, 2.2, 2.2, 2.2, 2.2, 2.2, 2.2, 2.2, 2.2, 2.2, 2.2, 2.2, 2.2, 2.2, 2.2, 2.2, 2.2,
#     2.2, 2.2, 2.2, 2.2, 2.2, 2.2, 7.1, 2.3, 2.3, 2.3, 2.3, 2.3, 2.3, 2.3, 2.3, 2.3, 2.3, 2.3, 2.3, 2.3, 2.3, 2.3, 8.1, 2.2, 2.2,
#     2.2, 2.2, 2.2, 2.2, 2.2, 2.2, 3.2, 1.7, 2.7, 2.7, 2.7, 2.7, 2.7, 2.7, 2.7, 2.7, 2.7, 2.7, 2.7, 2.7, 2.7, 3.7, 1.2, 2.2, 2.2,
#     2.2, 2.2, 2.2, 2.2, 2.2, 2.2, 3.2, 1.8, 2.8, 2.8, 2.8, 2.8, 2.8, 2.8, 2.8, 2.8, 2.8, 2.8, 2.8, 2.8, 2.8, 3.8, 1.2, 2.2, 2.2,
#     2.2, 2.2, 7.1, 2.3, 2.3, 2.3, 3.3, 1.8, 2.8, 2.8, 2.8, 2.8, 2.8, 2.8, 2.8, 2.8, 2.8, 2.8, 2.8, 2.8, 2.8, 3.8, 1.2, 2.2, 2.2,
#     2.2, 2.2, 3.2, 1.7, 2.7, 2.7, 2.7, 8.8, 2.8, 2.8, 2.8, 2.8, 2.8, 2.8, 2.8, 2.8, 2.8, 2.8, 2.8, 2.8, 2.8, 3.8, 1.2, 2.2, 2.2,
#     2.2, 2.2, 3.2, 1.8, 2.8, 2.8, 2.8, 2.8, 2.8, 2.8, 2.8, 2.8, 2.8, 2.8, 7.7, 2.9, 2.9, 2.9, 2.9, 2.9, 2.9, 3.9, 1.2, 2.2, 2.2,
#     2.2, 2.2, 3.2, 1.8, 2.8, 2.8, 2.8, 2.8, 2.8, 2.8, 2.8, 2.8, 2.8, 2.8, 3.8, 1.1, 2.1, 2.1, 2.1, 2.1, 2.1, 2.1, 8.2, 2.2, 2.2,
#     2.2, 2.2, 3.2, 1.9, 2.9, 2.9, 2.9, 2.9, 8.7, 2.8, 2.8, 2.8, 2.8, 2.8, 3.8, 1.2, 2.2, 2.2, 2.2, 2.2, 2.2, 2.2, 2.2, 2.2, 2.2,
#     2.2, 2.2, 7.2, 2.1, 2.1, 2.1, 2.1, 3.1, 1.8, 2.8, 2.8, 2.8, 2.8, 2.8, 3.8, 1.2, 2.2, 2.2, 2.2, 2.2, 2.2, 2.2, 2.2, 2.2, 2.2,
#     2.2, 2.2, 2.2, 2.2, 2.2, 2.2, 2.2, 3.2, 1.8, 2.8, 2.8, 2.8, 2.8, 2.8, 3.8, 1.2, 2.2, 2.2, 2.2, 2.2, 2.2, 2.2, 2.2, 2.2, 2.2,
#     2.2, 2.2, 2.2, 2.2, 2.2, 2.2, 2.2, 3.2, 1.9, 2.9, 2.9, 2.9, 2.9, 2.9, 3.9, 1.2, 2.2, 2.2, 2.2, 2.2, 2.2, 2.2, 2.2, 2.2, 2.2,
#     2.2, 2.2, 2.2, 2.2, 2.2, 2.2, 2.2, 7.2, 2.1, 2.1, 2.1, 2.1, 2.1, 2.1, 2.1, 8.2, 2.2, 2.2, 2.2, 2.2, 2.2, 2.2, 2.2, 2.2, 2.2,
#     2.2, 2.2, 2.2, 2.2, 2.2, 2.2, 2.2, 2.2, 2.2, 2.2, 2.2, 2.2, 2.2, 2.2, 2.2, 2.2, 2.2, 2.2, 2.2, 2.2, 2.2, 2.2, 2.2, 2.2, 2.2,
#     2.2, 2.2, 2.2, 2.2, 2.2, 2.2, 2.2, 2.2, 2.2, 2.2, 2.2, 2.2, 2.2, 2.2, 2.2, 2.2, 2.2, 2.2, 2.2, 2.2, 2.2, 2.2, 2.2, 2.2, 2.2]
background = [2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,-1,1.7,2.7,2.7,2.7,2.7,2.7,2.7,2.7,2.7,2.7,2.7,2.7,2.7,2.7,3.7,-1,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,-1,1.8,2.8,2.8,2.8,2.8,2.8,2.8,2.8,2.8,2.8,2.8,2.8,2.8,2.8,3.8,-1,2.2,2.2,2.2,2.2,-1,-1,-1,-1,-1,1.8,2.8,2.8,2.8,2.8,2.8,2.8,2.8,2.8,2.8,2.8,2.8,2.8,2.8,3.8,-1,2.2,2.2,2.2,2.2,-1,1.7,2.7,2.7,2.7,8.8,2.8,2.8,2.8,2.8,2.8,2.8,2.8,2.8,2.8,2.8,2.8,2.8,2.8,3.8,-1,2.2,2.2,2.2,2.2,-1,1.8,2.8,2.8,2.8,2.8,2.8,2.8,2.8,2.8,2.8,2.8,7.7,2.9,2.9,2.9,2.9,2.9,2.9,3.9,-1,2.2,2.2,2.2,2.2,-1,1.8,2.8,2.8,2.8,2.8,2.8,2.8,2.8,2.8,2.8,2.8,3.8,-1,-1,-1,-1,-1,-1,-1,-1,2.2,2.2,2.2,2.2,-1,1.9,2.9,2.9,2.9,2.9,8.7,2.8,2.8,2.8,2.8,2.8,3.8,-1,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,-1,-1,-1,-1,-1,-1,1.8,2.8,2.8,2.8,2.8,2.8,3.8,-1,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,-1,1.8,2.8,2.8,2.8,2.8,2.8,3.8,-1,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,-1,1.9,2.9,2.9,2.9,2.9,2.9,3.9,-1,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,-1,-1,-1,-1,-1,-1,-1,-1,-1,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2]
tiles = [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,7.1,2.3,2.3,2.3,2.3,2.3,2.3,2.3,2.3,2.3,2.3,2.3,2.3,2.3,2.3,2.3,8.1,-1,-1,-1,-1,-1,-1,-1,-1,3.2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1.2,-1,-1,-1,-1,-1,-1,-1,-1,3.2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1.2,-1,-1,-1,-1,7.1,2.3,2.3,2.3,3.3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1.2,-1,-1,-1,-1,3.2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1.2,-1,-1,-1,-1,3.2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1.2,-1,-1,-1,-1,3.2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1.1,2.1,2.1,2.1,2.1,2.1,2.1,8.2,-1,-1,-1,-1,3.2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1.2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,7.2,2.1,2.1,2.1,2.1,3.1,-1,-1,-1,-1,-1,-1,-1,1.2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3.2,-1,-1,-1,-1,-1,-1,-1,1.2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3.2,-1,-1,-1,-1,-1,-1,-1,1.2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,7.2,2.1,2.1,2.1,2.1,2.1,2.1,2.1,8.2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1]
b = []

width = 19
height = 13

import math

def convert(map):
    for r in range(19):
        new_row = []
        for c in range(25):
            current = map[r * 25 + c]
            if current != -1:
                x = math.floor(current)
                y = round((current - x) * 10)
                # print(current, x, y)
                new_index = y * width + x
                # print(new_index, y, x)
                # exit()
                new_row.append(new_index)
            else:
                new_row.append(0)
        # print(new_row)
        # (print(x, end=", ") for x in new_row)
        print(*new_row, sep=", ", end="")
        print(",")

convert(background)
print("map")
convert(tiles)

# 2.2 = 40
"""
0-18
19-37
"""
